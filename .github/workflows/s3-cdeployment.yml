name: Update staging versions

# Controls when the action will run.
on:
  # Allow the workflow to be manually triggered
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      commit:
        # Description to be shown in the UI instead of 'stack'
        description: 'commit hash'
        # Default value if no value is explicitly provided
        default: ''
        # Input does not have to be provided for the workflow to run
        required: false
      release-type:
        # Description to be shown in the UI instead of 'stack'
        description: 'Format: first / patch / minor / major'
        # Default value if no value is explicitly provided
        default: 'patch'
        # Input does not have to be provided for the workflow to run
        required: true

jobs:
  dispatch:
    name: Update staging versions
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3
      # The branch, tag or SHA to checkout. When checking out the repository that
      # triggered a workflow, this defaults to the reference or SHA for that event.
      # Otherwise, uses the default branch.
      with:
        ref: ${{ inputs.commit }}
        token: ${{ secrets.REPO_ACCESS_TOKEN }}

    - name: GitHub Tag Name example
      run: |
        echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
        echo "Tag name from github.ref_name: ${{  github.ref_name }}"

    - name: Yarn
      id: yarn-install
      run: yarn
    - name: Git config
      id: git-config
      run: |
        git config user.name 'github-actions[bot]'
        git config user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Configuration for major branch
      if: ${{ inputs.release-type == 'major' }}
      # Side note, I can run any Linux command here, not just 'echo'
      run: yarn run release:major

    - name: Configuration for minor branch
      if: ${{ inputs.release-type == 'minor' }}
      # Side note, I can run any Linux command here, not just 'echo'
      run: yarn run release:minor

    - name: Configuration for patch branch
      if: ${{ inputs.release-type == 'patch' }}
      # Side note, I can run any Linux command here, not just 'echo'
      run: yarn run release:patch

    - name: Configuration for first branch
      if: ${{ inputs.release-type == 'first' }}
      # Side note, I can run any Linux command here, not just 'echo'
      run: yarn run release:first

    - name: git pish tag
      # Side note, I can run any Linux command here, not just 'echo'
      run: |
        git status
        git tag
        TAG_NAME=$(git tag)
        git push --follow-tags origin master

    # - name: Commit step
    #   id: commit
    #   uses: stefanzweifel/git-auto-commit-action@v4

    # - name: Set tag job
    #   id: set-tag
    #   run: |
    #     COMMIT=$(git rev-list --tags --max-count=1)
    #     TAG=$(git describe --tags $COMMIT)
    #     REPOSITORY=$(echo '${{ github.repository }}')
    #     REPOSITORY_NAME=$(echo $REPOSITORY | awk -F '/' '{print $2}')
    #     echo $TAG
    #     echo $REPOSITORY_NAME
    #     JSON=$(jq --null-input --arg repo "$REPOSITORY" --arg tag "$TAG" '{"repo": $repo, "tag": $tag}')
    #     echo $JSON
    #     echo ::set-output name=json::${JSON//'%'/'%25'}

    # - name: Repository Dispatch
    #   uses: peter-evans/repository-dispatch@v2
    #   with:
    #     token: ${{ secrets.REPO_ACCESS_TOKEN }}
    #     repository: victorggonzalez/workflows
    #     event-type: update-staging-version
    #     client-payload: ${{steps.set-tag.outputs.json}}
